Transformation Grids¶

Transformation grids improve accuracy when you are performing datum transformations.

More information about the data available is located under the PROJresource filesdocumentation.

Note

pyprojAPI for managing theData DirectoryandPROJ Network Settings.

Note

pyproj 3 wheels do not include any transformation grids.

Downloading data¶

PROJ 7+¶

PROJ 7.0 has introduced, perPROJ RFC 4: Remote access to grids and GeoTIFF grids,
the capability to work with grid files that are not installed on the local machine where PROJ is executed.

Available methods for download include:

Mirroring the data:To download to the PROJ user-writable data directory:Added in version 7.1.0.exportPROJ_DOWNLOAD_DIR=$(python-c"import pyproj; print(pyproj.datadir.get_user_data_dir())")To download to the main PROJ data directory:exportPROJ_DOWNLOAD_DIR=$(python-c"import pyproj; print(pyproj.datadir.get_data_dir())")Download the files with either:awss3syncs3://cdn.proj.org${PROJ_DOWNLOAD_DIR}or:wget--mirrorhttps://cdn.proj.org/-P${PROJ_DOWNLOAD_DIR}Theprojsynccommand line program.pyproj synccommand line program (pyproj 3+; useful if you use pyproj wheels).EnablingPROJ networkcapabilities. See alsoPROJ Network Settings.Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/PROJ-dataUsecondawith theconda-forgechannel:condainstall-cconda-forgeproj-data

Mirroring the data:To download to the PROJ user-writable data directory:Added in version 7.1.0.exportPROJ_DOWNLOAD_DIR=$(python-c"import pyproj; print(pyproj.datadir.get_user_data_dir())")To download to the main PROJ data directory:exportPROJ_DOWNLOAD_DIR=$(python-c"import pyproj; print(pyproj.datadir.get_data_dir())")Download the files with either:awss3syncs3://cdn.proj.org${PROJ_DOWNLOAD_DIR}or:wget--mirrorhttps://cdn.proj.org/-P${PROJ_DOWNLOAD_DIR}

Mirroring the data:

To download to the PROJ user-writable data directory:

Added in version 7.1.0.

To download to the main PROJ data directory:

Download the files with either:

or:

Theprojsynccommand line program.

Theprojsynccommand line program.

pyproj synccommand line program (pyproj 3+; useful if you use pyproj wheels).

pyproj synccommand line program (pyproj 3+; useful if you use pyproj wheels).

EnablingPROJ networkcapabilities. See alsoPROJ Network Settings.

EnablingPROJ networkcapabilities. See alsoPROJ Network Settings.

Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/PROJ-data

Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/PROJ-data

Usecondawith theconda-forgechannel:condainstall-cconda-forgeproj-data

Usecondawith theconda-forgechannel:

PROJ <= 6¶

Available methods for download include:

Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/proj-datumgridUsecondawith theconda-forgechannel:condainstall-cconda-forgeproj-datumgrid-europeproj-datumgrid-north-americaproj-datumgrid-oceaniaproj-datumgrid-world

Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/proj-datumgrid

Download stable fromhttps://download.osgeo.org/projor latest fromhttps://github.com/OSGeo/proj-datumgrid

Usecondawith theconda-forgechannel:condainstall-cconda-forgeproj-datumgrid-europeproj-datumgrid-north-americaproj-datumgrid-oceaniaproj-datumgrid-world

Usecondawith theconda-forgechannel:

What grids to download?¶

Only using thepyproj.crs.CRSorpyproj.Geodclasses? Then no grids are needed.Have a machine that can hold and extra 500 MB - 1 GB of data? Then downloading all grids shouldn’t be an issue.Have a machine with limited space, a great network connection, and PROJ 7+?
Look intoPROJ networkcapabilities. See alsoPROJ Network Settings.Have a machine with limited space and want to pre-download files?You can enable enableDebugging Internal PROJwith pyproj 3+ and perform a transformation.
The logs will show the grids PROJ searches for.Additionally, thepyproj.transformer.TransformerGroupcan assist finding the grids you need to download.WarningThere are cases where the URL to download the grid is missing.>>>frompyproj.transformerimportTransformerGroup>>>tg=trans_group=TransformerGroup(4326,2964)UserWarning: Best transformation is not available due to missing Grid(short_name=us_noaa_alaska.tif, full_name=, package_name=, url=https://cdn.proj.org/us_noaa_alaska.tif, direct_download=True, open_license=True, available=False)>>>tg<TransformerGroup: best_available=False>- transformers: 8- unavailable_operations: 2>>>tg.transformers[0].description'Inverse of NAD27 to WGS 84 (7) + Alaska Albers'>>>tg.unavailable_operations[0].name'Inverse of NAD27 to WGS 84 (85) + Alaska Albers'>>>tg.unavailable_operations[0].grids[0].url'https://cdn.proj.org/us_noaa_alaska.tif'>>>tg.download_grids(verbose=True)# pyproj 3+Downloading: https://cdn.proj.org/us_noaa_alaska.tifDownloading: https://cdn.proj.org/ca_nrc_ntv2_0.tif

Only using thepyproj.crs.CRSorpyproj.Geodclasses? Then no grids are needed.

Only using thepyproj.crs.CRSorpyproj.Geodclasses? Then no grids are needed.

Have a machine that can hold and extra 500 MB - 1 GB of data? Then downloading all grids shouldn’t be an issue.

Have a machine that can hold and extra 500 MB - 1 GB of data? Then downloading all grids shouldn’t be an issue.

Have a machine with limited space, a great network connection, and PROJ 7+?
Look intoPROJ networkcapabilities. See alsoPROJ Network Settings.

Have a machine with limited space, a great network connection, and PROJ 7+?
Look intoPROJ networkcapabilities. See alsoPROJ Network Settings.

Have a machine with limited space and want to pre-download files?You can enable enableDebugging Internal PROJwith pyproj 3+ and perform a transformation.
The logs will show the grids PROJ searches for.Additionally, thepyproj.transformer.TransformerGroupcan assist finding the grids you need to download.WarningThere are cases where the URL to download the grid is missing.>>>frompyproj.transformerimportTransformerGroup>>>tg=trans_group=TransformerGroup(4326,2964)UserWarning: Best transformation is not available due to missing Grid(short_name=us_noaa_alaska.tif, full_name=, package_name=, url=https://cdn.proj.org/us_noaa_alaska.tif, direct_download=True, open_license=True, available=False)>>>tg<TransformerGroup: best_available=False>- transformers: 8- unavailable_operations: 2>>>tg.transformers[0].description'Inverse of NAD27 to WGS 84 (7) + Alaska Albers'>>>tg.unavailable_operations[0].name'Inverse of NAD27 to WGS 84 (85) + Alaska Albers'>>>tg.unavailable_operations[0].grids[0].url'https://cdn.proj.org/us_noaa_alaska.tif'>>>tg.download_grids(verbose=True)# pyproj 3+Downloading: https://cdn.proj.org/us_noaa_alaska.tifDownloading: https://cdn.proj.org/ca_nrc_ntv2_0.tif

Have a machine with limited space and want to pre-download files?

You can enable enableDebugging Internal PROJwith pyproj 3+ and perform a transformation.
The logs will show the grids PROJ searches for.

Additionally, thepyproj.transformer.TransformerGroupcan assist finding the grids you need to download.

Warning

There are cases where the URL to download the grid is missing.

Transformation GridsDownloading dataPROJ 7+PROJ <= 6What grids to download?

Transformation GridsDownloading dataPROJ 7+PROJ <= 6What grids to download?

Downloading dataPROJ 7+PROJ <= 6What grids to download?

Downloading dataPROJ 7+PROJ <= 6

PROJ 7+PROJ <= 6

PROJ 7+

PROJ <= 6

What grids to download?


--- CODE BLOCK ---
export PROJ_DOWNLOAD_DIR=$(python -c "import pyproj; print(pyproj.datadir.get_user_data_dir())")

------------------



--- CODE BLOCK ---
export PROJ_DOWNLOAD_DIR=$(python -c "import pyproj; print(pyproj.datadir.get_data_dir())")

------------------



--- CODE BLOCK ---
aws s3 sync s3://cdn.proj.org ${PROJ_DOWNLOAD_DIR}

------------------



--- CODE BLOCK ---
wget --mirror https://cdn.proj.org/ -P ${PROJ_DOWNLOAD_DIR}

------------------



--- CODE BLOCK ---
conda install -c conda-forge proj-data

------------------



--- CODE BLOCK ---
conda install -c conda-forge proj-datumgrid-europe proj-datumgrid-north-america proj-datumgrid-oceania proj-datumgrid-world

------------------



--- CODE BLOCK ---
>>> from pyproj.transformer import TransformerGroup
>>> tg = trans_group = TransformerGroup(4326, 2964)
UserWarning: Best transformation is not available due to missing Grid(short_name=us_noaa_alaska.tif, full_name=, package_name=, url=https://cdn.proj.org/us_noaa_alaska.tif, direct_download=True, open_license=True, available=False)
>>> tg
<TransformerGroup: best_available=False>
- transformers: 8
- unavailable_operations: 2
>>> tg.transformers[0].description
'Inverse of NAD27 to WGS 84 (7) + Alaska Albers'
>>> tg.unavailable_operations[0].name
'Inverse of NAD27 to WGS 84 (85) + Alaska Albers'
>>> tg.unavailable_operations[0].grids[0].url
'https://cdn.proj.org/us_noaa_alaska.tif'
>>> tg.download_grids(verbose=True)  # pyproj 3+
Downloading: https://cdn.proj.org/us_noaa_alaska.tif
Downloading: https://cdn.proj.org/ca_nrc_ntv2_0.tif

------------------
