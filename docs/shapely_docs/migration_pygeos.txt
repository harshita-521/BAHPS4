Migrating from PyGEOS#

The PyGEOS package was merged with Shapely in December 2021 and will be
released as part of Shapely 2.0. No further development will take place for
the PyGEOS package (except for providing up to date packages until Shapely
2.0 is released).

Therefore, everybody using PyGEOS is highly recommended to migrate to Shapely
2.0.

Generally speaking, this should be a smooth experience because all
functionality of PyGEOS was added to Shapely. All vectorized functions
available inpygeoshave been added to the top-levelshapelymodule,
with only minor differences (see below). Migrating from PyGEOS to Shapely 2.0
can thus be done by replacing thepygeosimport and module calls:

Using Shapely 2.0, this can now be written as:

In addition, you now also have the scalar interface of Shapely which wasnâ€™t
implemented in PyGEOS.

Differences between PyGEOS and Shapely 2.0#

STRtree API changes#

Functionality-wise, everything frompygeos.STRtreeis available in
Shapely 2.0. But while merging into Shapely, some methods have been changed
or merged:

Thequery()andquery_bulk()methods have been merged into a singlequery()method. Thequery()method now accepts an array of
geometries as well in addition to a single geometry, and in that case it
will return 2D array of indices.It should thus be a matter of replacingquery_bulkwithqueryin
your code.SeeSTRtree.query()for more details.Thenearest()method was changed to return an array of the same shape
as the input geometries. Thus, for a scalar geometry it now returns a
single integer index (instead of a (2, 1) array), and for an array of
geometries it now returns a 1D array of indices ((n,) array instead of a
(2, n) array).SeeSTRtree.nearest()for more details.Thenearest_all()method has been replaced withquery_nearest().
For an array of geometries, the output is the same, but when passing a
scalar geometry as input, the method now returns a 1D array instead of a 2D
array (consistent withquery()).In addition, this method gained the newexclusiveandall_matcheskeywords (with defaults preserving existing behaviour from PyGEOS). SeeSTRtree.query_nearest()for more details.

Thequery()andquery_bulk()methods have been merged into a singlequery()method. Thequery()method now accepts an array of
geometries as well in addition to a single geometry, and in that case it
will return 2D array of indices.It should thus be a matter of replacingquery_bulkwithqueryin
your code.SeeSTRtree.query()for more details.

Thequery()andquery_bulk()methods have been merged into a singlequery()method. Thequery()method now accepts an array of
geometries as well in addition to a single geometry, and in that case it
will return 2D array of indices.

It should thus be a matter of replacingquery_bulkwithqueryin
your code.

SeeSTRtree.query()for more details.

Thenearest()method was changed to return an array of the same shape
as the input geometries. Thus, for a scalar geometry it now returns a
single integer index (instead of a (2, 1) array), and for an array of
geometries it now returns a 1D array of indices ((n,) array instead of a
(2, n) array).SeeSTRtree.nearest()for more details.

Thenearest()method was changed to return an array of the same shape
as the input geometries. Thus, for a scalar geometry it now returns a
single integer index (instead of a (2, 1) array), and for an array of
geometries it now returns a 1D array of indices ((n,) array instead of a
(2, n) array).

SeeSTRtree.nearest()for more details.

Thenearest_all()method has been replaced withquery_nearest().
For an array of geometries, the output is the same, but when passing a
scalar geometry as input, the method now returns a 1D array instead of a 2D
array (consistent withquery()).In addition, this method gained the newexclusiveandall_matcheskeywords (with defaults preserving existing behaviour from PyGEOS). SeeSTRtree.query_nearest()for more details.

Thenearest_all()method has been replaced withquery_nearest().
For an array of geometries, the output is the same, but when passing a
scalar geometry as input, the method now returns a 1D array instead of a 2D
array (consistent withquery()).

In addition, this method gained the newexclusiveandall_matcheskeywords (with defaults preserving existing behaviour from PyGEOS). SeeSTRtree.query_nearest()for more details.

Other differences#

Thepygeos.Geometry(..)constructor has not been retained in Shapely
(the class exists as base class, but the constructor is not callable). Use
one of the subclasses, orshapely.from_wkt(..), instead.Theapply()function was renamed totransform().Thetolerancekeyword of thesegmentize()function was renamed tomax_segment_length.Thequadsegskeyword of thebuffer()andoffset_curve()functions was renamed toquad_segs.Thepreserve_topologykeyword ofsimplify()now defaults toTrueinstead ofFalse.The behaviour ofunion_all()/intersection_all()/symmetric_difference_allwas changed to return an empty
GeometryCollection for an empty or all-None sequence as input (instead of
returning None).Theradiuskeyword of thebuffer()function was renamed todistance.

Thepygeos.Geometry(..)constructor has not been retained in Shapely
(the class exists as base class, but the constructor is not callable). Use
one of the subclasses, orshapely.from_wkt(..), instead.

Thepygeos.Geometry(..)constructor has not been retained in Shapely
(the class exists as base class, but the constructor is not callable). Use
one of the subclasses, orshapely.from_wkt(..), instead.

Theapply()function was renamed totransform().

Theapply()function was renamed totransform().

Thetolerancekeyword of thesegmentize()function was renamed tomax_segment_length.

Thetolerancekeyword of thesegmentize()function was renamed tomax_segment_length.

Thequadsegskeyword of thebuffer()andoffset_curve()functions was renamed toquad_segs.

Thequadsegskeyword of thebuffer()andoffset_curve()functions was renamed toquad_segs.

Thepreserve_topologykeyword ofsimplify()now defaults toTrueinstead ofFalse.

Thepreserve_topologykeyword ofsimplify()now defaults toTrueinstead ofFalse.

The behaviour ofunion_all()/intersection_all()/symmetric_difference_allwas changed to return an empty
GeometryCollection for an empty or all-None sequence as input (instead of
returning None).

The behaviour ofunion_all()/intersection_all()/symmetric_difference_allwas changed to return an empty
GeometryCollection for an empty or all-None sequence as input (instead of
returning None).

Theradiuskeyword of thebuffer()function was renamed todistance.

Theradiuskeyword of thebuffer()function was renamed todistance.


--- CODE BLOCK ---
import pygeos
polygon = pygeos.box(0, 0, 2, 2)
points = pygeos.points(...)
pygeos.contains(polygon, points)

------------------



--- CODE BLOCK ---
import shapely
polygon = shapely.box(0, 0, 2, 2)
points = shapely.points(...)
shapely.contains(polygon, points)

------------------
