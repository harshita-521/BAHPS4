Predicates#

contains(a, b, **kwargs)

Return True if geometry B is completely inside geometry A.

contains_properly(a, b, **kwargs)

Return True if geometry B is completely inside geometry A, with no common boundary points.

contains_xy(geom, x[, y])

Return True if the Point (x, y) is completely inside geom.

covered_by(a, b, **kwargs)

Return True if no point in geometry A is outside geometry B.

covers(a, b, **kwargs)

Return True if no point in geometry B is outside geometry A.

crosses(a, b, **kwargs)

Return True if A and B spatially cross.

disjoint(a, b, **kwargs)

Return True if A and B do not share any point in space.

dwithin(a, b, distance, **kwargs)

Return True if the geometries are within a given distance.

equals(a, b, **kwargs)

Return True if A and B are spatially equal.

equals_exact(a, b[, tolerance, normalize])

Return True if the geometries are structurally equivalent within a given tolerance.

equals_identical(a, b, **kwargs)

Return True if the geometries are identical.

has_m(geometry, **kwargs)

Return True if a geometry has M coordinates.

has_z(geometry, **kwargs)

Return True if a geometry has Z coordinates.

intersects(a, b, **kwargs)

Return True if A and B share any portion of space.

intersects_xy(geom, x[, y])

Return True if geom and the Point (x, y) share any portion of space.

is_ccw(geometry, **kwargs)

Return True if a linestring or linearring is counterclockwise.

is_closed(geometry, **kwargs)

Return True if a linestring's first and last points are equal.

is_empty(geometry, **kwargs)

Return True if a geometry is an empty point, polygon, etc.

is_geometry(geometry, **kwargs)

Return True if the object is a geometry.

is_missing(geometry, **kwargs)

Return True if the object is not a geometry (None).

is_prepared(geometry, **kwargs)

Return True if a Geometry is prepared.

is_ring(geometry, **kwargs)

Return True if a linestring is closed and simple.

is_simple(geometry, **kwargs)

Return True if the geometry is simple.

is_valid(geometry, **kwargs)

Return True if a geometry is well formed.

is_valid_input(geometry, **kwargs)

Return True if the object is a geometry or None.

is_valid_reason(geometry, **kwargs)

Return a string stating if a geometry is valid and if not, why.

overlaps(a, b, **kwargs)

Return True if A and B spatially overlap.

relate(a, b, **kwargs)

Return a string representation of the DE-9IM intersection matrix.

relate_pattern(a, b, pattern, **kwargs)

Return True if the DE-9IM relationship code satisfies the pattern.

touches(a, b, **kwargs)

Return True if the only points shared between A and B are on their boundaries.

within(a, b, **kwargs)

Return True if geometry A is completely inside geometry B.